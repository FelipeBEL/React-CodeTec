{"ast":null,"code":"var _jsxFileName = \"/home/felipe/\\xC1rea de Trabalho/UFU - CodeTec/Estudo/React-CodeTec/my-money/src/tabs/Home.js\";\nimport React, { useEffect, useState, useReducer } from 'react';\nimport Rest from '../rest';\nimport CurrencyInput from 'react-currency-input';\nimport { firebaseDatabase } from '../utils/FirebaseUtils';\nimport firebase from 'firebase';\nimport { formatIsoTimeString } from '@fullcalendar/core';\nconst baseURL = 'https://mymoney-71935.firebaseio.com/';\nconst {\n  useGet,\n  usePost,\n  useDelete,\n  usePatch\n} = Rest(baseURL);\n\nconst Home = () => {\n  const saldo = firebaseDatabase.ref().once('value').then(snapshot => snapshot.val().saldo);\n  const [showSaldo, setShowSaldo] = useState();\n  const [form, setForm] = useState({});\n  const today = new Date();\n  var formatterReal = new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  });\n  useEffect(() => {\n    setShowSaldo(saldo);\n  }, [saldo]);\n\n  const handleChange = field => (event, maskedvalue, floatvalue) => {\n    setForm({ ...form,\n      [field]: maskedvalue\n    });\n  };\n\n  const calculaNewSaldo = () => {\n    var newSaldo = form.operation === '+' ? saldo.data + form.quantity : saldo.data - form.quantity;\n    if (newSaldo < 0) window.alert(\"Saldo insuficiente para a quantidade solicitada!\");else return newSaldo;\n  };\n\n  function writeUserData() {\n    var dateList = form.date.split(\"-\");\n    var day = dateList.pop();\n    var newSaldo = calculaNewSaldo();\n\n    if (newSaldo) {\n      firebaseDatabase.ref().update({\n        saldo: newSaldo\n      }).then(() => {\n        firebaseDatabase.ref('mes/' + dateList.join(\"-\") + \"/\" + day).push({\n          horario: form.time,\n          operacao: form.operation === '+' ? \"Adição (+)\" : \"Subtração (-)\",\n          quantidade: form.quantity\n        }).then(() => {\n          setShowSaldo(newSaldo);\n        });\n      });\n    }\n  }\n\n  const dataVerification = async () => {\n    // await setPost({ \"12\": { valor: 120 } })\n    writeUserData(); // console.log(\n    //     Object\n    //         .keys(data.data)\n    //         .map(mes => {\n    //             return (\n    //                 <tr key={mes}>\n    //                     <td>2020-01</td>\n    //                     <td>{data.data[mes].dia}</td>\n    //                     <td>{data.data[mes].valor}</td>\n    //                 </tr>\n    //             )\n    //         })\n    // )\n    // if (!form.date || !form.time || !form.operation || !form.quantity || form.operation === \"Selecione...\") {\n    //     window.alert(\"Favor, preencha todos os campos!\")\n    // } else {\n    // }\n  };\n\n  if (saldo.loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex justify-content-center\",\n      style: {\n        height: \"100%\",\n        backgroundColor: \"#5b7ab9\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border text-light\",\n      style: {\n        marginTop: \"25%\",\n        width: \"5em\",\n        height: \"5em\"\n      },\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"Loading...\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"white\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Adicionar/Remover dinheiro\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tres\",\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resize-calendar\",\n    style: {\n      marginLeft: \"5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      fontSize: \"3em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Saldo atual: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 38\n    }\n  }, formatterReal.format(showSaldo))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"align-labels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-row align-items-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"date\",\n    value: form.date,\n    onChange: e => setForm({ ...form,\n      date: e.target.value.toString()\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setForm({ ...form,\n      date: (today.getFullYear() + '-' + (today.getMonth() + 1 < 10 ? '0' + (today.getMonth() + 1) : today.getMonth() + 1) + '-' + (today.getDate() < 10 ? '0' + today.getDate() : today.getDate())).toString()\n    }),\n    className: \"btn btn-primary form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, \"Get Current Date\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"time\",\n    value: form.time,\n    onChange: e => {\n      setForm({ ...form,\n        time: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setForm({ ...form,\n        time: (today.getHours() < 10 ? '0' + today.getHours() : today.getHours()) + \":\" + (today.getMinutes() < 10 ? '0' + today.getMinutes() : today.getMinutes())\n      });\n    },\n    className: \"btn btn-primary form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }, \"Get Current Time\"))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputEmail4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, \"Operation\"), /*#__PURE__*/React.createElement(\"select\", {\n    type: \"select\",\n    class: \"form-control\",\n    onChange: e => {\n      setForm({ ...form,\n        operation: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, \"Selecione...\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: \"+\",\n    value: \"+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: \"-\",\n    value: \"-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 37\n    }\n  }, \"-\"))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputQuantity2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(CurrencyInput, {\n    prefix: \"R$\",\n    onChange: handleChange('quantity'),\n    value: form.quantity,\n    className: \"form-control input-color\",\n    id: \"inputQuantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginTop: \"2%\",\n      fontSize: \"2em\",\n      width: \"9em\",\n      height: \"4em\"\n    },\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: dataVerification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, \"Registrar movimenta\\xE7\\xE3o\"))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/felipe/Área de Trabalho/UFU - CodeTec/Estudo/React-CodeTec/my-money/src/tabs/Home.js"],"names":["React","useEffect","useState","useReducer","Rest","CurrencyInput","firebaseDatabase","firebase","formatIsoTimeString","baseURL","useGet","usePost","useDelete","usePatch","Home","saldo","ref","once","then","snapshot","val","showSaldo","setShowSaldo","form","setForm","today","Date","formatterReal","Intl","NumberFormat","style","currency","handleChange","field","event","maskedvalue","floatvalue","calculaNewSaldo","newSaldo","operation","data","quantity","window","alert","writeUserData","dateList","date","split","day","pop","update","join","push","horario","time","operacao","quantidade","dataVerification","loading","height","backgroundColor","marginTop","width","color","textAlign","marginLeft","fontSize","fontWeight","format","e","target","value","toString","getFullYear","getMonth","getDate","getHours","getMinutes"],"mappings":"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","sourcesContent":["import React, {\n    useEffect,\n    useState,\n    useReducer\n} from 'react'\nimport Rest from '../rest'\nimport CurrencyInput from 'react-currency-input'\nimport { firebaseDatabase } from '../utils/FirebaseUtils'\nimport firebase from 'firebase'\nimport { formatIsoTimeString } from '@fullcalendar/core'\n\nconst baseURL = 'https://mymoney-71935.firebaseio.com/'\nconst {\n    useGet,\n    usePost,\n    useDelete,\n    usePatch\n} = Rest(baseURL)\n\nconst Home = () => {\n    const saldo = firebaseDatabase.ref().once('value').then((snapshot) => snapshot.val().saldo)\n    const [showSaldo, setShowSaldo] = useState()\n    const [form, setForm] = useState({})\n    const today = new Date()\n\n    var formatterReal = new Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n    })\n\n    useEffect(() => {\n        setShowSaldo(saldo)\n    }, [saldo])\n\n    const handleChange = field => (event, maskedvalue, floatvalue) => {\n        setForm({\n            ...form,\n            [field]: maskedvalue\n        })\n    }\n\n    const calculaNewSaldo = () => {\n        var newSaldo = form.operation === '+' ? (saldo.data + form.quantity) : (saldo.data - form.quantity)\n\n        if (newSaldo < 0) window.alert(\"Saldo insuficiente para a quantidade solicitada!\")\n        else return newSaldo\n    }\n\n    function writeUserData() {\n        var dateList = form.date.split(\"-\")\n        var day = dateList.pop()\n        var newSaldo = calculaNewSaldo()\n\n        if (newSaldo) {\n            firebaseDatabase.ref().update({\n                saldo: newSaldo\n            }).then(() => {\n                firebaseDatabase.ref('mes/' + dateList.join(\"-\") + \"/\" + day).push({\n                    horario: form.time,\n                    operacao: form.operation === '+' ? \"Adição (+)\" : \"Subtração (-)\",\n                    quantidade: form.quantity\n                }).then(() => {\n                    setShowSaldo(newSaldo)\n                })\n            })\n        }\n\n    }\n\n    const dataVerification = async () => {\n        // await setPost({ \"12\": { valor: 120 } })\n\n        writeUserData()\n\n        // console.log(\n        //     Object\n        //         .keys(data.data)\n        //         .map(mes => {\n        //             return (\n        //                 <tr key={mes}>\n        //                     <td>2020-01</td>\n        //                     <td>{data.data[mes].dia}</td>\n        //                     <td>{data.data[mes].valor}</td>\n        //                 </tr>\n        //             )\n        //         })\n\n        // )\n\n\n        // if (!form.date || !form.time || !form.operation || !form.quantity || form.operation === \"Selecione...\") {\n        //     window.alert(\"Favor, preencha todos os campos!\")\n        // } else {\n\n        // }\n    }\n\n    if (saldo.loading) {\n        return (\n            <div class=\"d-flex justify-content-center\" style={{ height: \"100%\", backgroundColor: \"#5b7ab9\" }}>\n                <div class=\"spinner-border text-light\" style={{ marginTop: \"25%\", width: \"5em\", height: \"5em\" }} role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            <div className=\"header-tabs\">\n                <div style={{ color: \"white\", textAlign: \"center\" }}>\n                    <h1>Adicionar/Remover dinheiro</h1>\n                </div>\n            </div>\n\n            <div className=\"tres\" style={{ width: \"100%\", height: \"100%\" }}>\n                <div className=\"resize-calendar\" style={{ marginLeft: \"5%\" }}>\n                    <br />\n                    <br />\n                    <h1 style={{ fontSize: \"3em\" }}>\n                        Saldo atual: <span style={{ fontWeight: \"bold\" }}>{formatterReal.format(showSaldo)}</span>\n                    </h1>\n\n                    <form className=\"align-labels\">\n                        <div class=\"form-row align-items-end\">\n                            <div class=\"form-group col-md-3\">\n                                <label for=\"inputCity\">Date</label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"date\"\n                                    value={form.date}\n                                    onChange={e => setForm({ ...form, date: e.target.value.toString() })}\n                                />\n                            </div>\n                            <div class=\"form-group col-md-3\">\n                                <button type=\"button\" onClick={() => setForm({\n                                    ...form,\n                                    date: (today.getFullYear() + '-' + ((today.getMonth() + 1) < 10 ? '0' + (today.getMonth() + 1) : (today.getMonth() + 1)) +\n                                        '-' + (today.getDate() < 10 ? '0' + today.getDate() : today.getDate())).toString()\n                                }\n                                )}\n                                    className=\"btn btn-primary form-control\" >Get Current Date</button>\n                            </div>\n                            <div class=\"form-group col-md-3\">\n                                <label for=\"inputState\">Time</label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"time\"\n                                    value={form.time}\n                                    onChange={e => { setForm({ ...form, time: e.target.value }) }}\n                                />\n                            </div>\n                            <div class=\"form-group col-md-3\">\n                                <button type=\"button\" onClick={() => {\n                                    setForm({\n                                        ...form,\n                                        time: (today.getHours() < 10 ? '0' + today.getHours() : today.getHours())\n                                            + \":\" + (today.getMinutes() < 10 ? '0' + today.getMinutes() : today.getMinutes())\n                                    })\n                                }}\n                                    className=\"btn btn-primary form-control\" >Get Current Time</button>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-md-3\">\n                                <label for=\"inputEmail4\">Operation</label>\n                                <select type=\"select\" class=\"form-control\" onChange={e => { setForm({ ...form, operation: e.target.value }) }}>\n                                    <option selected>Selecione...</option>\n                                    <option key=\"+\" value=\"+\">+</option>\n                                    <option key=\"-\" value=\"-\">-</option>\n                                </select>\n                            </div>\n                            <div class=\"form-group col-md-9\">\n                                <label for=\"inputQuantity2\">Quantity</label>\n                                <CurrencyInput prefix='R$' onChange={handleChange('quantity')} value={form.quantity} className='form-control input-color' id='inputQuantity' />\n                            </div>\n                        </div>\n                    </form>\n\n                    <button style={{ marginTop: \"2%\", fontSize: \"2em\", width: \"9em\", height: \"4em\" }}\n                        type=\"button\" className=\"btn btn-primary\" onClick={dataVerification} >Registrar movimentação</button>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}
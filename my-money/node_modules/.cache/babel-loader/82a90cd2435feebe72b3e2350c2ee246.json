{"ast":null,"code":"import React, { useEffect, useState, useReducer } from 'react';\nimport axios from 'axios';\nconst INITIAL_STATE = {\n  loading: true,\n  data: {}\n};\n\nconst reducer = (state, action) => {\n  if (action.type === 'REQUEST') {\n    return { ...state,\n      loading: true\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return { ...state,\n      loading: false,\n      data: action.data\n    };\n  }\n\n  return state;\n};\n\nconst init = baseURL => {\n  const useGet = resource => {\n    const [data, dispatch] = useReducer(reducer, INITIAL_STATE);\n    useEffect(() => {\n      dispatch({\n        type: 'REQUEST'\n      });\n      axios.get(baseURL + resource + '.json').then(res => {\n        dispatch({\n          type: 'SUCCESS',\n          data: res.data\n        });\n      });\n    }, []);\n    return data;\n  };\n\n  const usePost = resource => {\n    const [data, dispatch] = useReducer(reducer, INITIAL_STATE);\n\n    const post = data => {\n      dispatch({\n        type: 'REQUEST'\n      });\n      axios.post(baseURL + resource + '.json', data).then(res => {\n        dispatch({\n          type: 'SUCCESS',\n          data: res.data\n        });\n      });\n    };\n\n    return [data, post];\n  };\n\n  const useDelete = () => {\n    const [data, dispatch] = useReducer(reducer, INITIAL_STATE);\n\n    const remove = resource => {\n      dispatch({\n        type: 'REQUEST'\n      });\n      axios.delete(baseURL + resource + '.json').then(() => {\n        dispatch({\n          type: 'SUCCESS'\n        });\n      });\n    };\n\n    return [data, remove];\n  };\n\n  return {\n    useGet,\n    usePost,\n    useDelete\n  };\n};\n\nexport default init;","map":{"version":3,"sources":["C:/Users/elias/Desktop/UFU - Felipe/React-CodeTec/my-money/src/rest.js"],"names":["React","useEffect","useState","useReducer","axios","INITIAL_STATE","loading","data","reducer","state","action","type","init","baseURL","useGet","resource","dispatch","get","then","res","usePost","post","useDelete","remove","delete"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,IADS;AAElBC,EAAAA,IAAI,EAAE;AAFY,CAAtB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,MAAIA,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC3B,WAAO,EACH,GAAGF,KADA;AAEHH,MAAAA,OAAO,EAAE;AAFN,KAAP;AAIH;;AAED,MAAII,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC3B,WAAO,EACH,GAAGF,KADA;AAEHH,MAAAA,OAAO,EAAE,KAFN;AAGHC,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAHV,KAAP;AAKH;;AAED,SAAOE,KAAP;AACH,CAjBD;;AAmBA,MAAMG,IAAI,GAAGC,OAAO,IAAI;AACpB,QAAMC,MAAM,GAAGC,QAAQ,IAAI;AACvB,UAAM,CAACR,IAAD,EAAOS,QAAP,IAAmBb,UAAU,CAACK,OAAD,EAAUH,aAAV,CAAnC;AAEAJ,IAAAA,SAAS,CAAC,MAAM;AACZe,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACAP,MAAAA,KAAK,CAACa,GAAN,CAAUJ,OAAO,GAAGE,QAAV,GAAqB,OAA/B,EAAwCG,IAAxC,CAA6CC,GAAG,IAAI;AAChDH,QAAAA,QAAQ,CAAC;AAAEL,UAAAA,IAAI,EAAE,SAAR;AAAmBJ,UAAAA,IAAI,EAAEY,GAAG,CAACZ;AAA7B,SAAD,CAAR;AACH,OAFD;AAGH,KALQ,EAKN,EALM,CAAT;AAOA,WAAOA,IAAP;AACH,GAXD;;AAaA,QAAMa,OAAO,GAAGL,QAAQ,IAAI;AACxB,UAAM,CAACR,IAAD,EAAOS,QAAP,IAAmBb,UAAU,CAACK,OAAD,EAAUH,aAAV,CAAnC;;AAEA,UAAMgB,IAAI,GAAGd,IAAI,IAAI;AACjBS,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACAP,MAAAA,KAAK,CAACiB,IAAN,CAAWR,OAAO,GAAGE,QAAV,GAAqB,OAAhC,EAAyCR,IAAzC,EAA+CW,IAA/C,CAAoDC,GAAG,IAAI;AACvDH,QAAAA,QAAQ,CAAC;AACLL,UAAAA,IAAI,EAAE,SADD;AAELJ,UAAAA,IAAI,EAAEY,GAAG,CAACZ;AAFL,SAAD,CAAR;AAIH,OALD;AAMH,KARD;;AAUA,WAAO,CAACA,IAAD,EAAOc,IAAP,CAAP;AACH,GAdD;;AAgBA,QAAMC,SAAS,GAAG,MAAM;AACpB,UAAM,CAACf,IAAD,EAAOS,QAAP,IAAmBb,UAAU,CAACK,OAAD,EAAUH,aAAV,CAAnC;;AAEA,UAAMkB,MAAM,GAAGR,QAAQ,IAAI;AACvBC,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACAP,MAAAA,KAAK,CAACoB,MAAN,CAAaX,OAAO,GAAGE,QAAV,GAAqB,OAAlC,EAA2CG,IAA3C,CAAgD,MAAM;AAClDF,QAAAA,QAAQ,CAAC;AACLL,UAAAA,IAAI,EAAE;AADD,SAAD,CAAR;AAGH,OAJD;AAKH,KAPD;;AASA,WAAO,CAACJ,IAAD,EAAOgB,MAAP,CAAP;AACH,GAbD;;AAeA,SAAO;AAAET,IAAAA,MAAF;AAAUM,IAAAA,OAAV;AAAmBE,IAAAA;AAAnB,GAAP;AACH,CA9CD;;AAgDA,eAAeV,IAAf","sourcesContent":["import React, { useEffect, useState, useReducer } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst INITIAL_STATE = {\r\n    loading: true,\r\n    data: {}\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === 'REQUEST') {\r\n        return {\r\n            ...state,\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SUCCESS') {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            data: action.data\r\n        }\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nconst init = baseURL => {\r\n    const useGet = resource => {\r\n        const [data, dispatch] = useReducer(reducer, INITIAL_STATE)\r\n\r\n        useEffect(() => {\r\n            dispatch({ type: 'REQUEST' })\r\n            axios.get(baseURL + resource + '.json').then(res => {\r\n                dispatch({ type: 'SUCCESS', data: res.data })\r\n            })\r\n        }, [])\r\n\r\n        return data\r\n    }\r\n\r\n    const usePost = resource => {\r\n        const [data, dispatch] = useReducer(reducer, INITIAL_STATE)\r\n\r\n        const post = data => {\r\n            dispatch({ type: 'REQUEST' })\r\n            axios.post(baseURL + resource + '.json', data).then(res => {\r\n                dispatch({\r\n                    type: 'SUCCESS',\r\n                    data: res.data\r\n                })\r\n            })\r\n        }\r\n\r\n        return [data, post]\r\n    }\r\n\r\n    const useDelete = () => {\r\n        const [data, dispatch] = useReducer(reducer, INITIAL_STATE)\r\n\r\n        const remove = resource => {\r\n            dispatch({ type: 'REQUEST' })\r\n            axios.delete(baseURL + resource + '.json').then(() => {\r\n                dispatch({\r\n                    type: 'SUCCESS'\r\n                })\r\n            })\r\n        }\r\n\r\n        return [data, remove]\r\n    }\r\n\r\n    return { useGet, usePost, useDelete }\r\n}\r\n\r\nexport default init"]},"metadata":{},"sourceType":"module"}
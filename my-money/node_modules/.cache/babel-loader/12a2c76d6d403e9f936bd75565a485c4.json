{"ast":null,"code":"import React, { useEffect, useState, useReducer } from 'react';\nimport axios from 'axios';\nconst INITIAL_STATE = {\n  loading: true,\n  data: {}\n};\nconst INITIAL_STATE2 = {\n  loading: true,\n  data: {}\n};\n\nconst reducer = (state, action) => {\n  if (action.type === 'REQUEST') {\n    return { ...state,\n      loading: true\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return { ...state,\n      loading: false,\n      data: action.data\n    };\n  }\n\n  return state;\n};\n\nconst reducer2 = (state, action) => {\n  if (action.type === 'REQUEST') {\n    return { ...state,\n      loading: true\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return { ...state,\n      loading: false,\n      data: action.data\n    };\n  }\n\n  return state;\n};\n\nconst init = baseURL => {\n  function fazRequisicao(data1) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (data1.loading === false) {\n          resolve();\n        }\n      }, 5000);\n    });\n  }\n\n  const useGet = resource => {\n    const [data, dispatch] = useReducer(reducer, INITIAL_STATE);\n    const [data1, dispatch2] = useReducer(reducer2, INITIAL_STATE2);\n    useEffect(() => {\n      dispatch({\n        type: 'REQUEST'\n      });\n      axios.get(baseURL + resource + '.json').then(res => {\n        dispatch({\n          type: 'SUCCESS',\n          data: res.data\n        });\n      });\n    }, []);\n\n    const get = async customResource => {\n      dispatch2({\n        type: 'REQUEST'\n      });\n      const res = await axios.get(baseURL + customResource + '.json');\n      dispatch2({\n        type: 'SUCCESS',\n        data: res.data\n      });\n      return data1;\n    };\n\n    return [data, get];\n  };\n\n  const usePost = resource => {\n    const [data, dispatch] = useReducer(reducer, INITIAL_STATE);\n\n    const post = async data => {\n      dispatch({\n        type: 'REQUEST'\n      });\n      const res = await axios.post(baseURL + resource + '.json', data);\n      dispatch({\n        type: 'SUCCESS',\n        data: res.data\n      });\n    };\n\n    return [data, post];\n  };\n\n  const usePatch = resource => {\n    const [data, dispatch] = useReducer(reducer, INITIAL_STATE);\n\n    const patch = async data => {\n      dispatch({\n        type: 'REQUEST'\n      });\n      const res = await axios.patch(baseURL + resource + '.json', data);\n      dispatch({\n        type: 'SUCCESS',\n        data: res.data\n      });\n    };\n\n    return [data, patch];\n  };\n\n  const useDelete = () => {\n    const [data, dispatch] = useReducer(reducer, INITIAL_STATE);\n\n    const remove = resource => {\n      dispatch({\n        type: 'REQUEST'\n      });\n      axios.delete(baseURL + resource + '.json').then(() => {\n        dispatch({\n          type: 'SUCCESS'\n        });\n      });\n    };\n\n    return [data, remove];\n  };\n\n  return {\n    useGet,\n    usePost,\n    useDelete,\n    usePatch\n  };\n};\n\nexport default init;","map":{"version":3,"sources":["/home/felipe/Área de Trabalho/UFU - CodeTec/Estudo/React-CodeTec/my-money/src/rest.js"],"names":["React","useEffect","useState","useReducer","axios","INITIAL_STATE","loading","data","INITIAL_STATE2","reducer","state","action","type","reducer2","init","baseURL","fazRequisicao","data1","Promise","resolve","reject","setTimeout","useGet","resource","dispatch","dispatch2","get","then","res","customResource","usePost","post","usePatch","patch","useDelete","remove","delete"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useReducer } from 'react'\nimport axios from 'axios'\n\nconst INITIAL_STATE = {\n    loading: true,\n    data: {}\n}\n\nconst INITIAL_STATE2 = {\n    loading: true,\n    data: {}\n}\n\nconst reducer = (state, action) => {\n    if (action.type === 'REQUEST') {\n        return {\n            ...state,\n            loading: true\n        }\n    }\n\n    if (action.type === 'SUCCESS') {\n        return {\n            ...state,\n            loading: false,\n            data: action.data\n        }\n    }\n\n    return state\n}\n\nconst reducer2 = (state, action) => {\n    if (action.type === 'REQUEST') {\n        return {\n            ...state,\n            loading: true\n        }\n    }\n\n    if (action.type === 'SUCCESS') {\n        return {\n            ...state,\n            loading: false,\n            data: action.data\n        }\n    }\n\n    return state\n}\n\nconst init = baseURL => {\n    function fazRequisicao(data1) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (data1.loading === false) {\n                    resolve()\n                }\n            }, 5000);\n        });\n    }\n\n    const useGet = resource => {\n        const [data, dispatch] = useReducer(reducer, INITIAL_STATE)\n        const [data1, dispatch2] = useReducer(reducer2, INITIAL_STATE2)\n\n        useEffect(() => {\n            dispatch({ type: 'REQUEST' })\n            axios.get(baseURL + resource + '.json').then(res => {\n                dispatch({ type: 'SUCCESS', data: res.data })\n            })\n        }, [])\n\n        const get = async (customResource) => {\n            dispatch2({ type: 'REQUEST' })\n            const res = await axios.get(baseURL + customResource + '.json')\n\n            dispatch2({ type: 'SUCCESS', data: res.data })\n\n\n            return data1\n\n        }\n\n        return [data, get]\n    }\n\n    const usePost = resource => {\n        const [data, dispatch] = useReducer(reducer, INITIAL_STATE)\n\n        const post = async (data) => {\n            dispatch({ type: 'REQUEST' })\n            const res = await axios.post(baseURL + resource + '.json', data)\n            dispatch({\n                type: 'SUCCESS',\n                data: res.data\n            })\n        }\n\n        return [data, post]\n    }\n\n    const usePatch = resource => {\n        const [data, dispatch] = useReducer(reducer, INITIAL_STATE)\n\n        const patch = async (data) => {\n            dispatch({ type: 'REQUEST' })\n            const res = await axios.patch(baseURL + resource + '.json', data)\n            dispatch({\n                type: 'SUCCESS',\n                data: res.data\n            })\n        }\n\n        return [data, patch]\n    }\n\n    const useDelete = () => {\n        const [data, dispatch] = useReducer(reducer, INITIAL_STATE)\n\n        const remove = resource => {\n            dispatch({ type: 'REQUEST' })\n            axios.delete(baseURL + resource + '.json').then(() => {\n                dispatch({\n                    type: 'SUCCESS'\n                })\n            })\n        }\n\n        return [data, remove]\n    }\n\n    return { useGet, usePost, useDelete, usePatch }\n}\n\nexport default init"]},"metadata":{},"sourceType":"module"}